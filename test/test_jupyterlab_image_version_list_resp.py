# coding: utf-8

"""
    调度器服务

    调度器服务的接口定义

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.jupyterlab_image_version_list_resp import JupyterlabImageVersionListResp

class TestJupyterlabImageVersionListResp(unittest.TestCase):
    """JupyterlabImageVersionListResp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JupyterlabImageVersionListResp:
        """Test JupyterlabImageVersionListResp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JupyterlabImageVersionListResp`
        """
        model = JupyterlabImageVersionListResp()
        if include_optional:
            return JupyterlabImageVersionListResp(
                data = [
                    openapi_client.models.jupyterlab_image_version.JupyterlabImageVersion(
                        image_name = '', 
                        image_size = 56, 
                        tag_name = '', 
                        full_name = '', 
                        push_time = '', )
                    ]
            )
        else:
            return JupyterlabImageVersionListResp(
                data = [
                    openapi_client.models.jupyterlab_image_version.JupyterlabImageVersion(
                        image_name = '', 
                        image_size = 56, 
                        tag_name = '', 
                        full_name = '', 
                        push_time = '', )
                    ],
        )
        """

    def testJupyterlabImageVersionListResp(self):
        """Test JupyterlabImageVersionListResp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
