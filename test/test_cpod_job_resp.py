# coding: utf-8

"""
    调度器服务

    调度器服务的接口定义

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cpod_job_resp import CpodJobResp

class TestCpodJobResp(unittest.TestCase):
    """CpodJobResp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CpodJobResp:
        """Test CpodJobResp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CpodJobResp`
        """
        model = CpodJobResp()
        if include_optional:
            return CpodJobResp(
                job_list = [
                    None
                    ],
                inference_service_list = [
                    openapi_client.models.inference_service.InferenceService(
                        service_name = '', 
                        status = '', 
                        model_name = '', 
                        model_id = '', 
                        model_size = 56, 
                        model_is_public = True, 
                        model_category = '', 
                        model_meta = '', 
                        adapter_name = '', 
                        adapter_id = '', 
                        adapter_size = 56, 
                        adapter_is_public = True, 
                        gpu_type = '', 
                        gpu_number = 56, 
                        min_instances = 56, 
                        max_instances = 56, 
                        template = '', 
                        cpod_id = '', 
                        user_id = '', )
                    ],
                jupyter_lab_list = [
                    openapi_client.models.jupyter_lab.JupyterLab(
                        job_name = '', 
                        instance_name = '', 
                        cpu_count = '', 
                        memory = '', 
                        gpu_count = 56, 
                        gpu_product = '', 
                        data_volume_size = '', 
                        resource = openapi_client.models.jupyter_resource.JupyterResource(
                            models = [
                                openapi_client.models.model.Model(
                                    model_id = '', 
                                    model_name = '', 
                                    model_path = '', 
                                    model_size = 56, 
                                    model_is_public = True, 
                                    model_template = '', 
                                    model_meta = '', 
                                    model_category = '', )
                                ], 
                            datasets = [
                                openapi_client.models.dataset.Dataset(
                                    dataset_id = '', 
                                    dataset_name = '', 
                                    dataset_path = '', 
                                    dataset_size = 56, 
                                    dataset_is_public = True, )
                                ], 
                            adapters = [
                                openapi_client.models.adapter.Adapter(
                                    adapter_id = '', 
                                    adapter_name = '', 
                                    adapter_path = '', 
                                    adapter_size = 56, 
                                    adapter_is_public = True, )
                                ], ), 
                        user_id = '', 
                        replicas = 56, )
                    ],
                app_job_list = [
                    openapi_client.models.app_job_info.AppJobInfo(
                        job_name = '', 
                        instance_name = '', 
                        user_id = '', 
                        app_id = '', 
                        app_name = '', 
                        crd = '', 
                        meta = '', )
                    ]
            )
        else:
            return CpodJobResp(
                job_list = [
                    None
                    ],
                inference_service_list = [
                    openapi_client.models.inference_service.InferenceService(
                        service_name = '', 
                        status = '', 
                        model_name = '', 
                        model_id = '', 
                        model_size = 56, 
                        model_is_public = True, 
                        model_category = '', 
                        model_meta = '', 
                        adapter_name = '', 
                        adapter_id = '', 
                        adapter_size = 56, 
                        adapter_is_public = True, 
                        gpu_type = '', 
                        gpu_number = 56, 
                        min_instances = 56, 
                        max_instances = 56, 
                        template = '', 
                        cpod_id = '', 
                        user_id = '', )
                    ],
                jupyter_lab_list = [
                    openapi_client.models.jupyter_lab.JupyterLab(
                        job_name = '', 
                        instance_name = '', 
                        cpu_count = '', 
                        memory = '', 
                        gpu_count = 56, 
                        gpu_product = '', 
                        data_volume_size = '', 
                        resource = openapi_client.models.jupyter_resource.JupyterResource(
                            models = [
                                openapi_client.models.model.Model(
                                    model_id = '', 
                                    model_name = '', 
                                    model_path = '', 
                                    model_size = 56, 
                                    model_is_public = True, 
                                    model_template = '', 
                                    model_meta = '', 
                                    model_category = '', )
                                ], 
                            datasets = [
                                openapi_client.models.dataset.Dataset(
                                    dataset_id = '', 
                                    dataset_name = '', 
                                    dataset_path = '', 
                                    dataset_size = 56, 
                                    dataset_is_public = True, )
                                ], 
                            adapters = [
                                openapi_client.models.adapter.Adapter(
                                    adapter_id = '', 
                                    adapter_name = '', 
                                    adapter_path = '', 
                                    adapter_size = 56, 
                                    adapter_is_public = True, )
                                ], ), 
                        user_id = '', 
                        replicas = 56, )
                    ],
                app_job_list = [
                    openapi_client.models.app_job_info.AppJobInfo(
                        job_name = '', 
                        instance_name = '', 
                        user_id = '', 
                        app_id = '', 
                        app_name = '', 
                        crd = '', 
                        meta = '', )
                    ],
        )
        """

    def testCpodJobResp(self):
        """Test CpodJobResp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
