# coding: utf-8

"""
    调度器服务

    调度器服务的接口定义

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.resource_list_resp import ResourceListResp

class TestResourceListResp(unittest.TestCase):
    """ResourceListResp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResourceListResp:
        """Test ResourceListResp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResourceListResp`
        """
        model = ResourceListResp()
        if include_optional:
            return ResourceListResp(
                public_list = [
                    openapi_client.models.resource.Resource(
                        id = '', 
                        name = '', 
                        object = '', 
                        owner = '', 
                        size = 56, 
                        is_public = True, 
                        user_id = '', 
                        tag = [
                            ''
                            ], 
                        template = '', 
                        meta = '', 
                        category = '', 
                        base_model = '', 
                        finetune_gpu_count = 56, 
                        inference_gpu_count = 56, )
                    ],
                user_list = [
                    openapi_client.models.resource.Resource(
                        id = '', 
                        name = '', 
                        object = '', 
                        owner = '', 
                        size = 56, 
                        is_public = True, 
                        user_id = '', 
                        tag = [
                            ''
                            ], 
                        template = '', 
                        meta = '', 
                        category = '', 
                        base_model = '', 
                        finetune_gpu_count = 56, 
                        inference_gpu_count = 56, )
                    ]
            )
        else:
            return ResourceListResp(
                public_list = [
                    openapi_client.models.resource.Resource(
                        id = '', 
                        name = '', 
                        object = '', 
                        owner = '', 
                        size = 56, 
                        is_public = True, 
                        user_id = '', 
                        tag = [
                            ''
                            ], 
                        template = '', 
                        meta = '', 
                        category = '', 
                        base_model = '', 
                        finetune_gpu_count = 56, 
                        inference_gpu_count = 56, )
                    ],
                user_list = [
                    openapi_client.models.resource.Resource(
                        id = '', 
                        name = '', 
                        object = '', 
                        owner = '', 
                        size = 56, 
                        is_public = True, 
                        user_id = '', 
                        tag = [
                            ''
                            ], 
                        template = '', 
                        meta = '', 
                        category = '', 
                        base_model = '', 
                        finetune_gpu_count = 56, 
                        inference_gpu_count = 56, )
                    ],
        )
        """

    def testResourceListResp(self):
        """Test ResourceListResp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
