# coding: utf-8

"""
    调度器服务

    调度器服务的接口定义

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.jupyter_resource import JupyterResource

class TestJupyterResource(unittest.TestCase):
    """JupyterResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JupyterResource:
        """Test JupyterResource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JupyterResource`
        """
        model = JupyterResource()
        if include_optional:
            return JupyterResource(
                models = [
                    openapi_client.models.model.Model(
                        model_id = '', 
                        model_name = '', 
                        model_path = '', 
                        model_size = 56, 
                        model_is_public = True, 
                        model_template = '', 
                        model_meta = '', 
                        model_category = '', )
                    ],
                datasets = [
                    openapi_client.models.dataset.Dataset(
                        dataset_id = '', 
                        dataset_name = '', 
                        dataset_path = '', 
                        dataset_size = 56, 
                        dataset_is_public = True, )
                    ],
                adapters = [
                    openapi_client.models.adapter.Adapter(
                        adapter_id = '', 
                        adapter_name = '', 
                        adapter_path = '', 
                        adapter_size = 56, 
                        adapter_is_public = True, )
                    ]
            )
        else:
            return JupyterResource(
        )
        """

    def testJupyterResource(self):
        """Test JupyterResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
